using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Caching;
using System.Xml.Linq;

namespace Redirect301
{
    public class PermanentRedirect301 : IHttpModule
    {
        #region Properties

        private const string XmlPath = "~/App_Data/301.xml";

        public string OldUrl { get; set; }
        public string NewUrl { get; set; }

        #endregion

        public void Init(HttpApplication context)
        {
            context.BeginRequest += Application_BeginRequest;
        }

        private void Application_BeginRequest(Object source, EventArgs e)
        {
            bool isAspxPage = true;
            string fullOrigionalpath = HttpContext.Current.Request.Path;

            if (fullOrigionalpath.Contains(".html"))
                fullOrigionalpath = fullOrigionalpath.Replace(".html", "");

            foreach (var item in new string[]
            {
                ".png",
                ".gif",
                ".jpeg",
                ".jpg",
                ".tiff",
                ".bmp",
                ".css",
                ".js",
                ".axd",
                ".woff",
                ".ttf",
                ".eot",
                ".svg"
            })
            {
                if (fullOrigionalpath.Contains(item))
                    isAspxPage = false;
            }
            if (isAspxPage)
            {
                if (fullOrigionalpath.Length > 1)
                {
                    string newUrl = GetNewUrl(fullOrigionalpath);
                    if (newUrl != null)
                    {
                        HttpContext.Current.Response.RedirectPermanent(newUrl, true);
                    }
                }
            }
        }

        public void Dispose()
        {
        }

        public static string GetNewUrl(string url)
        {
            var urlList = GetAll().Where(t => t.OldUrl.Equals(url, StringComparison.OrdinalIgnoreCase)).ToList();
            if (urlList.Count > 0)
            {
                var item = urlList[0];
                return item.NewUrl.ToLower();
            }
            else
            {
                return null;
            }
        }

        public static List<PermanentRedirect301> GetAll()
        {
            var result = HttpRuntime.Cache["PermanentRedirect301"] as List<PermanentRedirect301>;
            if (result != null && result.Count > 0)
                return result;

            result = new List<PermanentRedirect301>();
            XElement xelement = XElement.Load(HttpContext.Current.Server.MapPath(XmlPath));

            result = (from dt in xelement.Elements("Redirect")
                      select new PermanentRedirect301
                      {
                          OldUrl = dt.Element("OldURL").Value,
                          NewUrl = dt.Element("NewURL").Value,
                      }).ToList();

            HttpRuntime.Cache.Add("PermanentRedirect301", result, null, DateTime.Now.AddSeconds(7200), Cache.NoSlidingExpiration, CacheItemPriority.Default, null);

            return result;
        }
    }
}