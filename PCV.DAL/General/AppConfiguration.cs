using System;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Configuration;

/// <summary>
/// Summary description for AppConfiguration
/// </summary>
public class AppConfiguration
{
    #region Website Config - Properties

    public static string connString
    {
        get
        {
            string result = WebConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Connection String' not found in web.config file.");
        }
    }

    public static bool Website_Mode_IsLocal
    {
        get
        {
            bool result = Convert.ToBoolean(WebConfigurationManager.AppSettings.Get("Website_Mode_IsLocal"));
            return result;
        }
    }

    public static string Website_Name
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Website_Name");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_Name' not found in web.config file.");
        }
    }

    public static string Website_Url
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Website_Url");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_Url' not found in web.config file.");
        }
    }

    public static string Website_StaticDomain
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Website_StaticDomain");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_Url' not found in web.config file.");
        }
    }

    public static string Website_Logo
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Website_Logo");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_Logo' not found in web.config file.");
        }
    }

    public static string Website_SessionName
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Website_SessionName");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_SessionName' not found in web.config file.");
        }
    }

    public static string TamperProofKey
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("TamperProofKey");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting TamperProofKey not found in web.config file.");
        }
    }

    public static int PageSize
    {
        get
        {
            int result = WebConfigurationManager.AppSettings.Get("PageSize").To<int>();

            if (result > 0)
            {
                return result;
            }
            throw new Exception("AppSetting TamperProofKey not found in web.config file.");
        }
    }

    public static int CarGarageLimit
    {
        get
        {
            int result = WebConfigurationManager.AppSettings.Get("CarGarageLimit").To<int>();

            if (result > 0)
            {
                return result;
            }
            throw new Exception("AppSetting TamperProofKey not found in web.config file.");
        }
    }

    public static int CarCompareLimit
    {
        get
        {
            int result = WebConfigurationManager.AppSettings.Get("CarCompareLimit").To<int>();

            if (result > 0)
            {
                return result;
            }
            throw new Exception("AppSetting CarCompareLimit not found in web.config file.");
        }
    }



    public static string COMPARE_CAR_PRODUCTS_COOKIE_NAME
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("COMPARE_CAR_PRODUCTS_COOKIE_NAME");

            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting COMPARE_CAR_PRODUCTS_COOKIE_NAME not found in web.config file.");
        }
    }

    public static int VanGarageLimit
    {
        get
        {
            int result = WebConfigurationManager.AppSettings.Get("VanGarageLimit").To<int>();

            if (result > 0)
            {
                return result;
            }
            throw new Exception("AppSetting TamperProofKey not found in web.config file.");
        }
    }



    public static bool ShowCacheDateTime
    {
        get
        {
            bool result = Convert.ToBoolean(WebConfigurationManager.AppSettings.Get("ShowCacheDateTime"));
            return result;
        }
    }

    #endregion

    #region Admin - Properties

    public static string Admin_Website_Logo
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Admin_Website_Logo");
            if (string.IsNullOrEmpty(result))
            {
                result = WebConfigurationManager.AppSettings.Get("Website_Logo");
            }
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Website_Logo' not found in web.config file.");
        }
    }

    public static string Admin_Email_Name
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Admin_Email_Name");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Admin_Email_Name' not found in web.config file.");
        }
    }

    public static string Admin_Email_To
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Admin_Email_To");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Admin_Email_To' not found in web.config file.");
        }
    }

    public static string Admin_Email_From
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Admin_Email_From");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'Admin_Email_From' not found in web.config file.");
        }
    }

    public static string DevelopedBy
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("DevelopedBy");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'DevelopedBy' not found in web.config file.");
        }
    }

    public static string DevelopedBy_URL
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("DevelopedBy_URL");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'DevelopedBy_URL' not found in web.config file.");
        }
    }

    public static string DevelopedBy_Visible
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("DevelopedBy_Visible");
            if (!string.IsNullOrEmpty(result))
            {
                return result;
            }
            throw new Exception("AppSetting 'DevelopedBy_Visible' not found in web.config file.");
        }
    }

    private static int admin_colactions_Width = 105;

    public static int Admin_ColActions_Width
    {
        get
        {
            return admin_colactions_Width;
        }
        set
        {
            admin_colactions_Width = value;
        }
    }

    private static string _infoPanel = "";

    public static string infoPanel
    {
        get
        {
            return _infoPanel;
        }
        set
        {
            _infoPanel = "<div class='infoPanel_Wrapper'><div class='infoPanel'>" + value + "</div></div>";
        }
    }

    public static int ElmahLogKeepEntries
    {
        get
        {
            int? result = WebConfigurationManager.AppSettings.Get("ElmahLogKeepEntries").TryParseInt();
            if (result == null)
            {
                result = 10;
            }

            return (int)result;
        }
    }


    #endregion

    #region Misc - Properties

    public static bool SendMailOnError
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("SendMailOnError");
            if (!string.IsNullOrEmpty(result))
            {
                return Convert.ToBoolean(result);
            }
            throw new Exception("AppSetting SendMailOnError not found in web.config file.");
        }
    }

    public static string ServerName
    {
        get
        {
            string result = HttpContext.Current.Request.Url.Host.ToLower();
            return result;
        }
    }

    public static string ImageNotAvailable
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("ImageNotAvailable");
            return result;
        }
    }

    #endregion

    #region Website Specific - Properties

    public static string WebsitePhoneNumber
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("WebsitePhoneNumber");
            return result;
        }
    }

    public static string WebsitePhoneNumberTrim
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("WebsitePhoneNumber").RemoveEverySpace();
            return result;
        }
    }

    public static string[] WebsitePhoneNumberArray
    {
        get
        {
            var result = WebConfigurationManager.AppSettings.Get("WebsitePhoneNumber").Split(' ');
            return result;
        }
    }

    public static decimal VAT_Business
    {
        get
        {
            return WebConfigurationManager.AppSettings.Get("VAT_Business").ToString().TryParseDecimalNotNullable();
        }
    }

    public static decimal VAT_Personal
    {
        get
        {
            return WebConfigurationManager.AppSettings.Get("VAT_Personal").ToString().TryParseDecimalNotNullable();
        }
    }

    public static decimal VAT_Van
    {
        get
        {
            return WebConfigurationManager.AppSettings.Get("VAT_Van").ToString().TryParseDecimalNotNullable();
        }
    }





    public static string Directory_AddImages
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("Directory_AddImages");
            return result;
        }
    }

    #endregion


    public static int Ad_Subscription_DayLimit
    {
        get
        {
            int result = Convert.ToString(ConfigurationManager.AppSettings.Get("Ad_Subscription_DayLimit")).To<int>();
            return result;
        }
    }



  


  
    public static int BidMessageCount
    {
        get
        {
            int result = Convert.ToString(ConfigurationManager.AppSettings.Get("BidMessageCount")).To<int>();
            return result;
        }
    }

    public static string StripePublishableApiKey
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("StripePublishableApiKey");
            return result;
        }
    }

    public static string StripeSecretApiKey
    {
        get
        {
            string result = WebConfigurationManager.AppSettings.Get("StripeSecretApiKey");
            return result;
        }
    }

    public static int CacheTimeInMins
    {
        get
        {
            int result = Convert.ToString(ConfigurationManager.AppSettings.Get("CacheTimeInMins")).To<int>();
            return result;
        }
    }

}