using System;
using System.Linq;

/// <summary>
/// Summary description for AppLang
/// </summary>
namespace AppLang
{
    public class FormatMessageClass
    {
        protected enum EnumMessageType
        {
            Error,
            Success
        }

        protected static string FormatMessage(string message, EnumMessageType messageType)
        {
            string cssClass = "Message ";
            switch (messageType)
            {
                case EnumMessageType.Error:
                    cssClass += "Error";
                    break;
                case EnumMessageType.Success:
                    cssClass += "Success";
                    break;
            }
            return String.Format("<div class='{0}'>{1}</div>", cssClass, message);
        }

        protected static string FormatMessage(string message)
        {
            return FormatMessage(message, EnumMessageType.Error);
        }
    }

    public class Membership : FormatMessageClass
    {
        public static string UserExist
        {
            get
            {
                return FormatMessage("<h5>Email ID is already associated with an account.</h5><p>Did you forget your password? <a href='/Forgot-Password.aspx?EmailID={0}'>Reset now</a></p>");
            }
        }

        public static string DormantAccount
        {
            get
            {
                return FormatMessage("<h5>Access Denied</h5> <p>Your account is in dormant state. Please contact system admin to get your account activate.</p>");
            }
        }

        public static string LoginError
        {
            get
            {
                return FormatMessage("<h5>Access Denied</h5> <p>user / password combination wrong</p>");
            }
        }

        public static string Logout
        {
            get
            {
                return FormatMessage("<h5>Logged Out</h5> <p>You have successfully logged out</p>");
            }
        }

        public static string MembershipExpired
        {
            get
            {
                return FormatMessage("<h5>Access Denied</h5> <p>Your membership has expired.</p>");
            }
        }

        public static string UnAuthorized
        {
            get
            {
                return FormatMessage("<h5>Access Denied</h5> <p>You are not authorized to login.</p>");
            }
        }

        public static string ResetPassword_Success
        {
            get
            {
                return FormatMessage("<h5>Your new password has been email to your registered email ({0}).</h5>", EnumMessageType.Success);
            }
        }

        public static string ResetPassword_Error
        {
            get
            {
                return FormatMessage("<h5>Sorry you are not authorized to perform this action.</h5>");
            }
        }

        public static string ResetPasswordTokenInvalid
        {
            get
            {
                return FormatMessage("<h5>Sorry this password reset token is invalid or expired !</h5>");
            }
        }
        
        public static string ForgotPassword_Success
        {
            get
            {
                return FormatMessage("<h5>Email Sent</h5><p>Look for our email sent to {0}. Click the link in the email to create a new password.</p><p><b>Didn't get the email?</b></p><ul><li>Check the junk or spam folder in your email.</li><li>We can re-send the email.</li><li>Contact us for more support</li></ul>", EnumMessageType.Success);
            }
        }

        public static string ForgotPassword_Error
        {
            get
            {
                return FormatMessage("<h5>Sorry this email address doesn't exist into our database.</h5>");
            }
        }

        public static string ChangePassword_Error
        {
            get
            {
                return FormatMessage("<h5>The Password Confirmation does not match that held on records for your account.</h5><p>If you wish to change your password, please enter your current password correctly.</p>");
            }
        }

        public static string ChangePassword_Success
        {
            get
            {
                return FormatMessage("<h5>You have updated your password successfully.</h5>", EnumMessageType.Success);
            }
        }

        public static string ProfileUpdate
        {
            get
            {
                return FormatMessage("<h5>You have updated your profile successfully.</h5>", EnumMessageType.Success);
            }
        }

        public static string PasswordHelp
        {
            get
            {
                string passwordHelp = "<ul>";
                passwordHelp += "<li>Minimum of 8 characters</li>";
                passwordHelp += "<li>Use a mix of uppercase and lowercase letters, numbers and symbols</li>";
                passwordHelp += "<li>Don't use your name, email address or obvious numeric orders like 12345</li>";
                passwordHelp += "<li>Make your password hard to guess - for anyone</li>";
                passwordHelp += "</ul>";
                return passwordHelp;
            }
        }

        public static string RememberMeHelp
        {
            get
            {
                return "<ul><li>Check the box and you will not have to log in each time you come back. </li><li>If you use a shared computer, please do not check the 'Remember Me' checkbox.</li></ul>";
            }
        }
    }

    public class Products : FormatMessageClass
    {
        public static string NoRecordFound
        {
            get
            {
                return "<h5>Sorry, there is no data matching your query.</h5> <p>Please try to search with different combination or <a href='/contact-us' class='Blue'>contact us</a></p>";
            }
        }
    }

    public class Forms_Messages : FormatMessageClass
    {
        public static string InvalidFormSubmit
        {
            get
            {
                return FormatMessage("<h5>Please enter valid details in the following form.</h5>");
            }
        }

        public static string Thankyou_General
        {
            get
            {
                return FormatMessage("<h5>Thank you for submitting your details.</h5>");
            }
        }

        public static string Thankyou_PersonalLeasing
        {
            get
            {
                return FormatMessage("<h5>Thank you for your message.</h5> <p>We will do our best to reply you as soon as possible. Please rest assured that we read every single message we receive!</p>");
            }
        }

        public static string Thankyou_EnquireNow
        {
            get
            {
                return FormatMessage("<h5>Thank you for your message.</h5> <p>We will do our best to reply you as soon as possible. Please rest assured that we read every single message we receive!</p>");
            }
        }

        public static string Thankyou_Newsletter_Subscription
        {
            get
            {
                return FormatMessage("<h5>Thank you very much for your interest and your trust.</h5>");
            }
        }
    }

    public class Misc : FormatMessageClass
    {
        //public static string GenericMessage(string messageHeader, string message, string messageTypeRaw)
        //{
        //    string returnMessage = String.Format("<h5>{0}</h5><p>{1}</p>", messageHeader, message);
        //    var messageType = Functions.StringToEnum<AppLang.FormatMessageClass.EnumMessageType>(messageTypeRaw);

        //    return FormatMessage(returnMessage, messageType);
        //}
        
        public static string InvalidFormSubmit
        {
            get
            {
                return FormatMessage("<h5>Please enter valid details in the following form.</h5>", EnumMessageType.Error);
            }
        }

        public static string QuotationTermsCar
        {
            get
            {
                return ("<p><strong>Quotation Terms: </strong>Vehicles are new and UK supplied. Rates advertised are based on business contract hire, 6 months initial rental. All offers are correct at time of publishing. Contract Hire a Car reserves the right to remove any offers without notice. Images may differ from models stated</p>");
            }
        }

        public static string QuotationTermsVan
        {
            get
            {
                return ("<p><strong>Quotation Terms: </strong>Vehicles are new and UK supplied. Rates advertised are based on business contract hire, 6 months initial rental. All offers are correct at time of publishing. Contract Hire a Car reserves the right to remove any offers without notice. Images may differ from models stated</p>");
            }
        }
    }
}